Template: A kind of function which can execute different type of data type with the same function.
  1. Return type as void
    void Function_Name(Template_Var ParaName, ...)

  2. Return type as Template_Var
    <Template_Var> Function_Name <Template_Var(Template_Var ParaName, ...)

  3. Another Return type
    Return_Type Function_Name Template_Var(Template_Var ParaName, ...)

  Note: Any return type function beside which written outside class need to place class scope after Template_Var.
        Void return type need to place after Function_Name.
------------------------------------------------------------------------------------------------------------------
File: A kind of class which used to read or write data into another file.
  ifstream : Use to read data from file.
  ofstream: Use to write data to file.
  fstream: Use to read/write data.

  **Opening files:
  	1. Using constructors.
  		-ifstream(char *filename, [int mode = ios::in]);
  		-ofstream(char *filename, [int mode = ios::out]);
  		-fstream(char *filename, int mode);
  	2. Using Function member open.
  		-void open(char *filename, [int mode = ios::in]);
  		-void open(char *filename, [int mode = ios::out]);
  		-void open(char *filename, int mode);

	Mode Meaning
		ios::in [open file to read data]
		ios::out [open file to write data]
		ios::app [open file to appending data]
		ios::ate [open file dynamically]
		ios::binary [open binary file]
------------------------------------------------------------------------------------------------------------------
Polymophism: A groups of object that execute on method that has the same name. Class that has per virtual function
called abstract class per virtual function are class that has virtual as prefix, no definition, has value equal
zero(0), and can't create object from abstract class. Normally abstract class act as base class

To be con.
